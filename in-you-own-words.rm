chapters 1-4
As you go through the tutorial, note what each file and command is for. In your own works, answer the following questions about Rails directory structure and commands:

What are some things the terminal command rails new blog does?
-besides create new directory 'blog', it adds a lot of support folders and files

What does the command bundle do?
-loads needed gems, like running 'node packages' in JS does.  Also, instructions tell us:
Gemfile - files allow you to specify what gem dependencies are needed for your Rails application. These files are used by the Bundler gem.

What is config/routes.rb for?
-inventory of URL routes will use, to naviagate through the blog. I will create these routes.

What is app/views/layouts/application.html.erb doing for the project?
-gives title to tab on browser, 'Blog'. The '<%= yield %>' must be where index shows up - so far, just some text i wrote

What is the Gemfile for?
-makes sure all libraries needed are loaded, like 'rails' and 'puma'

chapter 5
In your own words, answer the following questions about the Model part of Rails MVC. Reference the ActiveRecord Rails Guide if you're not sure.

What is a "resource"?
What does it mean that ActiveRecord is an ORM framework?
What is a migration? How is it related to the app's database schema (db/schema.rb)?
What are some methods we can use to CRUD resources for a model, from inside a controller file? It may help to look at controller app/controllers/articles_controller.rb, and section 5 of the ActiveRecord Rails Guide.


In your own words, answer the following questions about the View part of Rails MVC. Reference the ActionView Overview Rails Guide if you're not sure.

In Rails RESTFUL routes, the index, show, new, and edit routes render HTML files. What should a user see on each of these pages?
What is the difference between a "layout" template and a "partial" template? Give an example of when you've used each.
Examine the HTML created by a form_for helper in your code. Why should we use form_for and helpers like f.text_area or f.email_field instead of writing Rails forms by hand?
How do we make data from the controller available in the view?
